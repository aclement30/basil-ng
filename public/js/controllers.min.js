"use strict";angular.module("mean.kitchen").controller("DetailController",["$scope","$state","$stateParams","Recipes","Kitchen",function(e,i,n,t,r){e.units={m:{code:"metric",name:"Métrique",icon:"scale"},i:{code:"imperial",name:"Impérial",icon:"measuring-cup"}},e.unit=e.units.m,e.recipeId=n.id,t.get({recipeId:e.recipeId},function(i){e.recipe=i,e["yield"]=e.recipe.recipeYield});var c;e.openMenu=function(e,i){c=i,e(i)},e.selectUnit=function(i){e.unit=e.units[i]},e.selectYield=function(i){e["yield"]=i},e.isCooking=function(){return r.isCooking(e.recipeId)},e.startCooking=function(){r.startCooking(e.recipeId)},e.stopCooking=function(){r.stopCooking(e.recipeId)},e.toggleFavorite=function(){r.toggleFavorite(e.recipeId)},e.edit=function(){i.go("edit",{id:e.recipeId})},e.getConvertedIngredient=function(i){var n,t="metric";if(e.recipe.ingredientsUnit&&(t=e.recipe.ingredientsUnit),i.unit){i.unit}else n=i}}]),angular.module("mean.kitchen").controller("EditController",["$scope","$state","$stateParams","Recipes","Ingredient","$filter",function(e,i,n,t,r,c){e.recipeId=n.id,t.get({recipeId:e.recipeId},function(i){angular.forEach(i.ingredients,function(e,i){e.description||(e.description=c("ingredientQuantity")(e.quantity,"text"),e.unit&&(e.description+=" "+c("ingredientUnit")(e.unit)),e.description+=" "+e.name,e.type&&(e.description+=" "+e.type))}),i.combinedIngredients=e.combineIngredients(i.ingredients),i.combinedInstructions=e.combineInstructions(i.recipeInstructions),e.recipe=i,e["yield"]=e.recipe.recipeYield}),e.combineIngredients=function(e){var i=[];return angular.forEach(e,function(e,n){i.push(e.description)}),i.join("\n")},e.parseIngredients=function(){e.recipe.ingredients=r.parseCombined(e.recipe.combinedIngredients)},e.combineInstructions=function(e){var i=[];return angular.forEach(e,function(e,n){i.push(e.description)}),i.join("\n")},e.parseInstructions=function(){var i=e.recipe.combinedInstructions.split("\n"),n=[];angular.forEach(i,function(e,i){n.push({description:e})}),e.recipe.recipeInstructions=n},e["delete"]=function(){confirm("Voulez-vous vraiment supprimer cette recette?")&&e.recipe.$remove(function(e){i.go("recipes")})},e.save=function(){var n=e.recipe;n.updated=(new Date).getTime(),n.$update(function(){i.go("detail",{id:e.recipe._id})})}}]),angular.module("mean.kitchen").controller("IndexController",["$scope","Global","Kitchen","$mdBottomSheet","$mdSidenav","$mdDialog","Recipes","Category","$timeout",function(e,i,n,t,r,c,o,s,u){e.global=i,o.query(function(i){e.recipes=i}),e.favoriteRecipes=n.getFavorites(),e.categories=s.get()}]),angular.module("mean.kitchen").controller("KitchenController",["$scope","Global","Kitchen",function(e,i,n){e.global=i,e.cookingRecipes=n.getCooking}]),angular.module("mean.kitchen").controller("NewController",["$scope","$state","Recipes","Ingredient","$http",function(e,i,n,t,r){e.selectedTabIndex=0,e.recipe={ingredients:[],combinedIngredients:null,ingredientsUnit:"metric",recipeInstructions:[],combinedInstructions:null,recipeYield:1},e["yield"]=e.recipe.recipeYield,e.parseIngredients=function(){e.recipe.ingredients=t.parseCombined(e.recipe.combinedIngredients)},e.parseInstructions=function(){var i=e.recipe.combinedInstructions.split("\n"),n=[];angular.forEach(i,function(e,i){n.push({description:e})}),e.recipe.recipeInstructions=n},e.parseUrl=function(){r.post("/api/recipes/parseUrl/",{url:e.remoteUrl}).then(function(i){e.recipe=i.data,e.selectedTabIndex=1},function(e){})},e.save=function(){var t=new n(e.recipe);t.$save(function(e){i.go("detail",{id:e._id})}),e.recipe={}}}]);