!function(){"use strict";function e(e,n,i,t,o,r){function c(){e("left").toggle()}function u(){e("left").close()}function s(){i.logout(function(){t.setCurrentUser(null)}),o.go("login")}var l=this,a={section:null,addButton:!0,backButton:!0};l.ui=angular.extend({},a),n.$on("$stateChangeStart",function(e,n){n.data?l.ui=angular.extend({},a,n.data.ui):l.ui=angular.extend({},a)}),l.closeMenu=u,l.toggleMenu=c,l.logout=s,l.cookingRecipes=r.cookingRecipes,i.login(function(){t.setCurrentUser(i.user)}),t.setCurrentUser=function(e){n.currentUser=e}}angular.module("basilApp.controllers").controller("AppController",e)}(),function(){"use strict";function e(e,n,i,t){var o=this;o.units={m:{code:"metric",name:"Métrique",icon:"scale"},i:{code:"imperial",name:"Impérial",icon:"measuring-cup"}},o.unit=$scope.units.m,o.recipeId=n.id,i.get({recipeId:o.recipeId},function(e){o.recipe=e,o["yield"]=o.recipe.recipeYield});var r;o.openMenu=function(e,n){r=n,e(n)},o.selectUnit=function(e){o.unit=o.units[e]},o.selectYield=function(e){o["yield"]=e},o.isCooking=function(){return t.isCooking(o.recipeId)},o.startCooking=function(){t.startCooking(o.recipeId)},o.stopCooking=function(){t.stopCooking(o.recipeId)},o.toggleFavorite=function(){t.toggleFavorite(o.recipeId)},o.edit=function(){e.go("edit",{id:o.recipeId})},o.getConvertedIngredient=function(e){var n,i="metric";if(o.recipe.ingredientsUnit&&(i=o.recipe.ingredientsUnit),e.unit){e.unit}else n=e}}angular.module("basilApp.controllers").controller("DetailController",e)}(),function(){"use strict";function e(e,n,i,t,o){var r=this;r.recipeId=n.id,i.get({recipeId:r.recipeId},function(e){angular.forEach(e.ingredients,function(e,n){e.description||(e.description=o("ingredientQuantity")(e.quantity,"text"),e.unit&&(e.description+=" "+o("ingredientUnit")(e.unit)),e.description+=" "+e.name,e.type&&(e.description+=" "+e.type))}),e.combinedIngredients=r.combineIngredients(e.ingredients),e.combinedInstructions=r.combineInstructions(e.recipeInstructions),r.recipe=e,r["yield"]=r.recipe.recipeYield}),r.combineIngredients=function(e){var n=[];return angular.forEach(e,function(e,i){n.push(e.description)}),n.join("\n")},r.parseIngredients=function(){r.recipe.ingredients=t.parseCombined(r.recipe.combinedIngredients)},r.combineInstructions=function(e){var n=[];return angular.forEach(e,function(e,i){n.push(e.description)}),n.join("\n")},r.parseInstructions=function(){var e=r.recipe.combinedInstructions.split("\n"),n=[];angular.forEach(e,function(e,i){n.push({description:e})}),r.recipe.recipeInstructions=n},r["delete"]=function(){confirm("Voulez-vous vraiment supprimer cette recette?")&&r.recipe.$remove(function(n){e.go("recipes")})},r.save=function(){var n=r.recipe;n.updated=(new Date).getTime(),n.$update(function(){e.go("detail",{id:r.recipe._id})})}}angular.module("basilApp.controllers").controller("EditController",e)}(),function(){"use strict";function e(e,n,i,t,o,r,c){var u=this;u.global=e,r.query(function(e){u.recipes=e}),u.favoriteRecipes=n.favoriteRecipes,u.categories=c.list}angular.module("basilApp.controllers").controller("IndexController",e)}(),function(){"use strict";function e(e){var n=this;n.cookingRecipes=e.getCooking}angular.module("basilApp.controllers").controller("KitchenController",e)}();